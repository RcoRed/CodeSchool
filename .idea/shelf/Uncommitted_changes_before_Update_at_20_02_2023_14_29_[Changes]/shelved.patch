Index: src/main/java/org/generation/italy/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy;\r\n\r\nimport org.generation.italy.codeSchool.model.Course;\r\nimport org.generation.italy.codeSchool.model.data.abstructions.CourseRepository;\r\nimport org.generation.italy.codeSchool.model.data.exceptions.DataException;\r\nimport org.generation.italy.codeSchool.model.data.implementations.InMemoryCourseRepository;\r\n\r\nimport java.util.Optional;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws DataException {       //ricordati di eliminare eventuali THROWS del main!\r\n\r\n        CourseRepository c = new InMemoryCourseRepository();\r\n        Optional<Course> x = c.findById(22);\r\n        Course def = x.orElse(new Course());        //se x è vuoto allora ritornerà new Course()\r\n        if (x.isPresent()){\r\n            Course course = x.get();\r\n            System.out.println(course.getTitle());\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/Main.java b/src/main/java/org/generation/italy/Main.java
--- a/src/main/java/org/generation/italy/Main.java	(revision b41134f19814dded7053bd3eb265e3a379dfff92)
+++ b/src/main/java/org/generation/italy/Main.java	(date 1676765306506)
@@ -1,7 +1,7 @@
 package org.generation.italy;
 
 import org.generation.italy.codeSchool.model.Course;
-import org.generation.italy.codeSchool.model.data.abstructions.CourseRepository;
+import org.generation.italy.codeSchool.model.data.abstractions.CourseRepository;
 import org.generation.italy.codeSchool.model.data.exceptions.DataException;
 import org.generation.italy.codeSchool.model.data.implementations.InMemoryCourseRepository;
 
Index: src/main/java/org/generation/italy/codeSchool/model/data/abstructions/CourseRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/codeSchool/model/data/abstructions/CourseRepository.java b/src/main/java/org/generation/italy/codeSchool/model/data/abstractions/CourseRepository.java
rename from src/main/java/org/generation/italy/codeSchool/model/data/abstructions/CourseRepository.java
rename to src/main/java/org/generation/italy/codeSchool/model/data/abstractions/CourseRepository.java
--- a/src/main/java/org/generation/italy/codeSchool/model/data/abstructions/CourseRepository.java	(revision b41134f19814dded7053bd3eb265e3a379dfff92)
+++ b/src/main/java/org/generation/italy/codeSchool/model/data/abstractions/CourseRepository.java	(date 1676765306481)
@@ -1,4 +1,4 @@
-package org.generation.italy.codeSchool.model.data.abstructions;
+package org.generation.italy.codeSchool.model.data.abstractions;
 
 import org.generation.italy.codeSchool.model.Course;
 import org.generation.italy.codeSchool.model.data.exceptions.DataException;
Index: src/main/java/org/generation/italy/codeSchool/model/data/implementations/InMemoryCourseRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy.codeSchool.model.data.implementations;\r\n\r\nimport org.generation.italy.codeSchool.model.Course;\r\nimport org.generation.italy.codeSchool.model.data.abstructions.CourseRepository;\r\nimport org.generation.italy.codeSchool.model.data.exceptions.EntityNotFoundException;\r\n\r\nimport java.util.*;\r\n\r\npublic class InMemoryCourseRepository implements CourseRepository {\r\n/*\r\n    pensalo come una arrayList(NON fanno parte della stassa famiglia) ma le posizioni vengono definite con degli id UNIVOCI\r\n    immaginalo come 2 colonne a sinistra l'id UNIVOCO della riga e a destra un oggetto\r\n */\r\n    private static Map<Long,Course> dataSource = new HashMap<>();\r\n    private static long nextId;\r\n\r\n    /*\r\n        Optional lo vedo un pò come una variabile jolly in che senso:\r\n        Viene utitlizzata soprattutto (o forse unicamente[questo ce lo dirà il tempo]) per gestire variabili/isatnze/puntaori che posso essere null, come?\r\n        Optional non può essere null, optional sarà EMPTY se gli passiamo un valore null e PRESENT se gli passiamo qualcosa che non sia null\r\n        Come vedi si dichiarano con le generics --> <>\r\n        all'interno ci mettiamo il tipo di dato che devono ricevere (lo sai insomma)\r\n        MA COSA FA?\r\n        dice al programmatore che bisogna fare un controllo (nomeOptional.isEmpty) se non lo fa è un coglione!\r\n        si! hai capito!! serve \"solo\" per ricordarci/ o a dire di controllare se un dato è vuoto(null) o meno, così da evitare cappellate logiche durante la scrittura dei codici\r\n     */\r\n\r\n    @Override\r\n    public Optional<Course> findById(long id) {\r\n        Course x = dataSource.get(id);\r\n        if (x != null){\r\n            return Optional.of(x);\r\n        }\r\n        return Optional.empty();\r\n    }\r\n\r\n    @Override\r\n    public List<Course> findByTitleContains(String part){\r\n        List<Course> result = new ArrayList<>();            //un pò di polimorfismo non fa mai male\r\n        Collection<Course> cs = dataSource.values();        //rappresenta una collezione di oggetti non ordinati(messi alla cazzo di cane) si ci possiamo ciclare sopra, guarda il for\r\n        for (Course c:cs){\r\n            if (c.getTitle().contains(part)){\r\n                result.add(c);                              //aggiungiamo l'oggetto che abbiamo trovato nella collection alla lista\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    @Override\r\n    public Course create(Course course) {\r\n        nextId++;\r\n        dataSource.put(nextId, course);\r\n        course.setId(nextId);\r\n        return course;\r\n    }\r\n\r\n    @Override\r\n    public void update(Course course) throws EntityNotFoundException {\r\n        if (dataSource.containsKey(course.getId())){\r\n            dataSource.put(course.getId(), course);                   //inseriamo l'oggeto nel hashMap\r\n        }else {\r\n//            EntityNotFoundException e = new EntityNotFoundException(\"Non esiste un corso con id: \" + course.getId());\r\n//            throw e;\r\n            throw new EntityNotFoundException(\"Non esiste un corso con id: \" + course.getId());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void deleteById(long id) throws EntityNotFoundException {\r\n//        Course old = dataSource.remove(id);\r\n//        if (old == null){\r\n//            throw new EntityNotFoundException(\"Non esiste un corso con id: \" + id);\r\n//        }\r\n        if (dataSource.remove(id)==null){           //possiamo farlo perche .remove() ritornerà null se non trova l' id\r\n            throw new EntityNotFoundException(\"Non esiste un corso con id: \" + id);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/codeSchool/model/data/implementations/InMemoryCourseRepository.java b/src/main/java/org/generation/italy/codeSchool/model/data/implementations/InMemoryCourseRepository.java
--- a/src/main/java/org/generation/italy/codeSchool/model/data/implementations/InMemoryCourseRepository.java	(revision b41134f19814dded7053bd3eb265e3a379dfff92)
+++ b/src/main/java/org/generation/italy/codeSchool/model/data/implementations/InMemoryCourseRepository.java	(date 1676765306561)
@@ -1,7 +1,7 @@
 package org.generation.italy.codeSchool.model.data.implementations;
 
 import org.generation.italy.codeSchool.model.Course;
-import org.generation.italy.codeSchool.model.data.abstructions.CourseRepository;
+import org.generation.italy.codeSchool.model.data.abstractions.CourseRepository;
 import org.generation.italy.codeSchool.model.data.exceptions.EntityNotFoundException;
 
 import java.util.*;
Index: src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy.codeSchool.model.data.implementations;\r\n\r\nimport org.generation.italy.codeSchool.model.Course;\r\nimport org.generation.italy.codeSchool.model.data.abstructions.CourseRepository;\r\nimport org.generation.italy.codeSchool.model.data.exceptions.DataException;\r\nimport org.generation.italy.codeSchool.model.data.exceptions.EntityNotFoundException;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.util.*;\r\n\r\nimport static org.generation.italy.codeSchool.model.data.Constants.*;\r\n\r\npublic class CSVFileCourseRepository implements CourseRepository {\r\n    private String fileName;\r\n    private static long nextId;\r\n    public static final String DEFAULT_FILE_NAME = \"Corsi.csv\";\r\n\r\n    public CSVFileCourseRepository() {\r\n        this.fileName = DEFAULT_FILE_NAME;\r\n    }\r\n    public CSVFileCourseRepository(String fileName) {\r\n        this.fileName = fileName;\r\n    }\r\n\r\n    @Override\r\n    public Optional<Course> findById(long id) throws DataException{             //!!RICORDATI!! se un metodo può dare un errore allora DEVI mettere il THROWS e l'exception che \"lancerà\"\r\n        try{\r\n            List<String> lines = Files.readAllLines(Paths.get(fileName));       //apro il file\r\n            for (String s:lines){                                               //ciclo per ogni riga letta\r\n                String[] trimmed = s.split(\",\");                          //uso un metodo della classe String che creerà una nuova stringa per ogni , che incontrerà, ogni stringa verrà salvata in un array\r\n                long courseId = Long.parseLong(trimmed[0]);\r\n                if (courseId == id){\r\n                    Course found = new Course(courseId,trimmed[1],trimmed[2]    //creo l'oggeto passando le stringhe letta dal file\r\n                            ,trimmed[3],Double.parseDouble(trimmed[4]));\r\n                    return Optional.of(found);\r\n                }\r\n            }\r\n            return Optional.empty();\r\n        }catch (IOException e){                                                  //\"raccogliamo\" IOException ma \"lanciamo\" un DataException di nostra creazione (si, si può fare) così da poter ancora utilizzare la nostra interfaccia nel miglior modo possibile\r\n            throw new DataException(\"Errore nella lettura del file\",e);          //lo lanciamo qui\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public List<Course> findByTitleContains(String part) throws DataException {\r\n        try {\r\n            List<String> lines = Files.readAllLines(Paths.get(fileName));\r\n            List<Course> courses = new ArrayList<>();\r\n            for(String s : lines){\r\n                String[] tokens = s.split(\",\");\r\n                if(tokens[1].contains(part)){\r\n                    Course found = new Course(Long.parseLong(tokens[0]), tokens[1], tokens[2],\r\n                            tokens[3], Double.parseDouble(tokens[4]));\r\n                    courses.add(found);\r\n                }\r\n            }\r\n            return courses;\r\n        }catch (IOException e){\r\n            throw new DataException(\"Errore nella lettura del file\", e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Course create(Course course) throws DataException{\r\n        /*\r\n            FileOutputStream serve per scrivere nel file                !!(magari da richiedere)!!\r\n            quel (append)true serve ad aggiungere una nuova riga alle riche esistenti, se non ci fosse sovrascriverebbe tutte le righe presenti nel file\r\n            PintWriter sarà colui che effettivamente scriverà sul file\r\n         */\r\n        try (FileOutputStream output = new FileOutputStream(fileName,true);\r\n                PrintWriter pw = new PrintWriter(output)){\r\n            course.setId(++nextId);\r\n            pw.println(CourseToCSV(course));                //è qui che scrivo sul file (si con una println) richiamando un metodo creato da noi(sta verso la fine)\r\n            return course;                                  //ovviamente nelle parentesi gli passo la stringa che voglio sivere sul file\r\n        }catch (IOException e){\r\n            throw new DataException(\"Errore nel salvataggio su file\",e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void update(Course course) throws EntityNotFoundException {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void deleteById(long id) throws EntityNotFoundException, DataException {\r\n        try{\r\n            List<String> lines= Files.readAllLines(Paths.get(fileName));\r\n            for(Iterator<String> it = lines.iterator(); it.hasNext();){\r\n                String line = it.next();\r\n                String[] tokens = line.split(\",\");\r\n                long courseId=Long.parseLong(tokens[0]);\r\n                if (courseId==id){\r\n                    it.remove();\r\n                    try(PrintWriter pw = new PrintWriter(new FileOutputStream(fileName))) {\r\n                        for (String st : lines) {\r\n                            pw.println(st);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            throw new EntityNotFoundException(ENTITY_NOT_FOUND + id);\r\n        }catch(IOException e){\r\n            throw new DataException(\"Errore nel cancellamento di una linea da file CSV\", e);\r\n        }\r\n\r\n    }\r\n\r\n    public String CourseToCSV(Course c){                //trasforma i dati presenti dell'oggetto in una stringa(che poi scriveremo sul file)\r\n        return String.format(Locale.US,\"%d,%s,%s,%s,%.2f\",c.getId(),c.getTitle()\r\n                ,c.getDescription(),c.getProgram(),c.getDuration());\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java b/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java
--- a/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java	(revision b41134f19814dded7053bd3eb265e3a379dfff92)
+++ b/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java	(date 1676765043953)
@@ -1,20 +1,21 @@
 package org.generation.italy.codeSchool.model.data.implementations;
 
 import org.generation.italy.codeSchool.model.Course;
-import org.generation.italy.codeSchool.model.data.abstructions.CourseRepository;
+import org.generation.italy.codeSchool.model.data.abstractions.CourseRepository;
 import org.generation.italy.codeSchool.model.data.exceptions.DataException;
 import org.generation.italy.codeSchool.model.data.exceptions.EntityNotFoundException;
 
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.PrintWriter;
+import java.io.Serializable;
 import java.nio.file.Files;
 import java.nio.file.Paths;
 import java.util.*;
 
 import static org.generation.italy.codeSchool.model.data.Constants.*;
 
-public class CSVFileCourseRepository implements CourseRepository {
+public class CSVFileCourseRepository implements CourseRepository{
     private String fileName;
     private static long nextId;
     public static final String DEFAULT_FILE_NAME = "Corsi.csv";
@@ -72,7 +73,7 @@
             PintWriter sarà colui che effettivamente scriverà sul file
          */
         try (FileOutputStream output = new FileOutputStream(fileName,true);
-                PrintWriter pw = new PrintWriter(output)){
+             PrintWriter pw = new PrintWriter(output)){
             course.setId(++nextId);
             pw.println(CourseToCSV(course));                //è qui che scrivo sul file (si con una println) richiamando un metodo creato da noi(sta verso la fine)
             return course;                                  //ovviamente nelle parentesi gli passo la stringa che voglio sivere sul file
@@ -82,8 +83,23 @@
     }
 
     @Override
-    public void update(Course course) throws EntityNotFoundException {
-
+    public void update(Course course) throws EntityNotFoundException, DataException {
+        try {
+            List<String> lines = Files.readAllLines(Paths.get(fileName));
+            for (String s : lines) {
+                String[] tokens = s.split(",");
+                if (course.getId()==Long.parseLong(tokens[0])){
+                    deleteById(Long.parseLong(tokens[0]));
+                    create(course);
+                    /*try (FileOutputStream output = new FileOutputStream(fileName,true);
+                         PrintWriter pw = new PrintWriter(output)){
+                        pw.println(CourseToCSV(course));
+                    }*/
+                }
+            }
+        }catch (IOException e){
+            throw new DataException("Errore nel salvataggio su file", e);
+        }
     }
 
     @Override
@@ -116,4 +132,4 @@
                 ,c.getDescription(),c.getProgram(),c.getDuration());
     }
 
-}
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4ba76fb9-891e-44df-96ae-93da7af4c02f\" name=\"Changes\" comment=\"Aggiunge Println di commit su branch\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepositoryTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepositoryTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"importingSettings\">\r\n      <MavenImportingSettings>\r\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\r\n      </MavenImportingSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2LlvnJWhJRi6wXFaI3TDqL3L8PW\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Dev/Java/Projects&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"org.generation.italy.codeSchool.model.data.implementations\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.CSVFileCourseRepositoryTest.deleteById_should_throw_when_course_not_present\">\r\n    <configuration name=\"CSVFileCourseRepositoryTest.createNewCourse\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"CodeSchool\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.generation.italy.codeSchool.model.data.implementations.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations.CSVFileCourseRepositoryTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"createNewCourse\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CSVFileCourseRepositoryTest.deleteById_should_delete_course_when_present\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"CodeSchool\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.generation.italy.codeSchool.model.data.implementations.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations.CSVFileCourseRepositoryTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"deleteById_should_delete_course_when_present\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CSVFileCourseRepositoryTest.deleteById_should_throw_when_course_not_present\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"CodeSchool\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.generation.italy.codeSchool.model.data.implementations.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations.CSVFileCourseRepositoryTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"deleteById_should_throw_when_course_not_present\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CSVFileCourseRepositoryTest.findById\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"CodeSchool\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.generation.italy.codeSchool.model.data.implementations.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations.CSVFileCourseRepositoryTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"findById\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CSVFileCourseRepositoryTest.findById_finds_course_when_present\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"CodeSchool\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.generation.italy.codeSchool.model.data.implementations.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.generation.italy.codeSchool.model.data.implementations.CSVFileCourseRepositoryTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"findById_finds_course_when_present\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.CSVFileCourseRepositoryTest.deleteById_should_throw_when_course_not_present\" />\r\n        <item itemvalue=\"JUnit.CSVFileCourseRepositoryTest.deleteById_should_delete_course_when_present\" />\r\n        <item itemvalue=\"JUnit.CSVFileCourseRepositoryTest.findById_finds_course_when_present\" />\r\n        <item itemvalue=\"JUnit.CSVFileCourseRepositoryTest.findById\" />\r\n        <item itemvalue=\"JUnit.CSVFileCourseRepositoryTest.createNewCourse\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4ba76fb9-891e-44df-96ae-93da7af4c02f\" name=\"Changes\" comment=\"\" />\r\n      <created>1676458651426</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1676458651426</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Aggiunge Println per fare un commit di esempio\">\r\n      <created>1676626571157</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676626571157</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Aggiunge Println di commit su branch\">\r\n      <created>1676627215272</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676627215272</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"master\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Aggiunge Println per fare un commit di esempio\" />\r\n    <MESSAGE value=\"Aggiunge Println di commit su branch\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Aggiunge Println di commit su branch\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b41134f19814dded7053bd3eb265e3a379dfff92)
+++ b/.idea/workspace.xml	(date 1676765308831)
@@ -6,8 +6,10 @@
   <component name="ChangeListManager">
     <list default="true" id="4ba76fb9-891e-44df-96ae-93da7af4c02f" name="Changes" comment="Aggiunge Println di commit su branch">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/generation/italy/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/generation/italy/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/abstructions/CourseRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/abstractions/CourseRepository.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/generation/italy/codeSchool/model/data/implementations/CSVFileCourseRepositoryTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/implementations/InMemoryCourseRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/generation/italy/codeSchool/model/data/implementations/InMemoryCourseRepository.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -35,6 +37,11 @@
     <option name="stateVersion" value="1" />
   </component>
   <component name="MavenImportPreferences">
+    <option name="generalSettings">
+      <MavenGeneralSettings>
+        <option name="useMavenConfig" value="true" />
+      </MavenGeneralSettings>
+    </option>
     <option name="importingSettings">
       <MavenImportingSettings>
         <option name="workspaceImportEnabled" value="true" />
